CREATE TABLE `filedetails` (
  `FileId` bigint NOT NULL AUTO_INCREMENT,
  `UserId` bigint DEFAULT NULL,
  `FileBytes` mediumblob,
  PRIMARY KEY (`FileId`),
  KEY `UserId` (`UserId`),
  CONSTRAINT `FileDetails_ibfk_1` FOREIGN KEY (`UserId`) REFERENCES `users` (`UserId`)
) ENGINE=InnoDB AUTO_INCREMENT=76 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `groupstable` (
  `GroupID` bigint NOT NULL AUTO_INCREMENT,
  `GroupName` varchar(200) DEFAULT NULL,
  `GroupType` varchar(200) DEFAULT NULL,
  `CreatedDate` date DEFAULT NULL,
  `GroupSize` bigint DEFAULT NULL,
  PRIMARY KEY (`GroupID`),
  UNIQUE KEY `GroupName` (`GroupName`)
) ENGINE=InnoDB AUTO_INCREMENT=90 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `recentactivity` (
  `Id` bigint NOT NULL AUTO_INCREMENT,
  `UserId` bigint DEFAULT NULL,
  `activity` text,
  PRIMARY KEY (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `user_group_mapping` (
  `UserGroupId` bigint NOT NULL AUTO_INCREMENT,
  `UserId` bigint NOT NULL,
  `GroupId` bigint NOT NULL,
  `IsInvitationAccepted` bit(1) DEFAULT NULL,
  PRIMARY KEY (`UserGroupId`),
  KEY `fk_User_id` (`UserId`),
  KEY `fk_Group_id` (`GroupId`),
  CONSTRAINT `fk_User_id` FOREIGN KEY (`UserId`) REFERENCES `users` (`UserId`),
  CONSTRAINT `User_Group_Mapping_ibfk_1` FOREIGN KEY (`GroupId`) REFERENCES `groupstable` (`GroupID`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=160 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `userexpenses` (
  `UserGroupId` bigint NOT NULL,
  `UserId2` bigint NOT NULL,
  `CreatedTime` date DEFAULT NULL,
  `ExpenseDescription` varchar(200) DEFAULT NULL,
  `ExpenseId` bigint NOT NULL AUTO_INCREMENT,
  `Expense` decimal(10,2) DEFAULT NULL,
  PRIMARY KEY (`ExpenseId`),
  KEY `UserGroupId` (`UserGroupId`),
  CONSTRAINT `UserExpenses_ibfk_1` FOREIGN KEY (`UserGroupId`) REFERENCES `user_group_mapping` (`UserGroupId`)
) ENGINE=InnoDB AUTO_INCREMENT=133 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `users` (
  `UserId` bigint NOT NULL AUTO_INCREMENT,
  `UserName` varchar(200) DEFAULT NULL,
  `Password` varchar(200) DEFAULT NULL,
  `Mail` varchar(200) DEFAULT NULL,
  `Phone_Number` varchar(200) DEFAULT NULL,
  `Last_Login` datetime DEFAULT NULL,
  `DefaultCurrency` varchar(50) DEFAULT NULL,
  `Language` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`UserId`),
  UNIQUE KEY `Mail` (`Mail`)
) ENGINE=InnoDB AUTO_INCREMENT=121 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_splitwise_DeleteExpenses`(In userId1 bigint, In userId2 bigint)
begin
	delete from UserExpenses where UserId2 = userId1 and UserGroupId  in (select UserGroupId from User_Group_Mapping where UserId = userId2);
	delete from UserExpenses where UserId2 = userId2 and UserGroupId  in (select UserGroupId from User_Group_Mapping where UserId = userId1);
end$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_splitwise_InsertMappings`(IN userIdarray varchar(500), IN groupId bigint, IN userId bigint, IN length bigint, IN recentActivity text)
wholeblock:BEGIN
  declare str VARCHAR(255) default '';
  declare curUserId varchar(200);
  declare IsInvitationAccepted bit;
  declare x bigint;
  declare strActivity text;
  SET x = 1;
  set IsInvitationAccepted = 1;

  WHILE x <= length DO
    SET curUserId = REPLACE(SUBSTRING(SUBSTRING_INDEX(userIdarray, ",", x),LENGTH(SUBSTRING_INDEX(userIdarray, ",", x - 1)) + 1),",", '');
    Insert into `dbo.splitwise`.User_Group_Mapping(UserId, GroupId, IsInvitationAccepted) values(curUserId, groupId, IsInvitationAccepted);
    SET strActivity = (select activity from `dbo.splitwise`.RecentActivity r where r.UserId = curUserId);
    Update `dbo.splitwise`.RecentActivity r set r.activity = (CONCAT(strActivity, ';',  recentActivity)) where r.Id = (select PID from (select Id as PID from `dbo.splitwise`.RecentActivity r where r.UserId = curUserId) as Temp);
    SET x = x + 1;
	set IsInvitationAccepted = 0;
  END WHILE;
    select str;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_splitwise_InsertUserDetails`(IN UserName varchar(200), IN Password varchar(200), IN Mail varchar(200), IN DefaultCurrency varchar(50), IN Language varchar(200), IN Last_Login datetime)
begin
	declare userId bigint;
	Insert into `dbo.splitwise`.Users(UserName, Password, Mail, DefaultCurrency, Language, Last_Login) values (UserName, Password, Mail, DefaultCurrency, Language, Last_Login);
    set userId = LAST_INSERT_ID();
    Insert into `dbo.splitwise`.FileDetails(UserId, FileBytes) values(userId, null);  
    Insert into `dbo.splitwise`.RecentActivity(activity, UserId) values('', userId);
    Select * from `dbo.splitwise`.Users U inner join `dbo.splitwise`.FileDetails F on U.UserId = F.UserId where U.UserId = userId;
end$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_splitwise_InsertUserGroupMappings`(IN userId bigint, IN groupId bigint, IN IsInvitationAccepted bit)
Begin	
	 Insert into `dbo.splitwise`.User_Group_Mapping(UserId, GroupId, IsInvitationAccepted) values(userId, groupId, IsInvitationAccepted);
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_splitwise_SaveExpenseActivities`(IN userId1 bigint, IN userId2 bigint, IN recentActivity text)
begin
	declare strActivity text;
    declare strActivity1 text;
	SET strActivity = (select activity from `dbo.splitwise`.RecentActivity r where r.UserId = userId1);
	Update `dbo.splitwise`.RecentActivity r set r.activity = (CONCAT(strActivity, ';',  recentActivity)) where r.Id = (select PID from (select Id as PID from `dbo.splitwise`.RecentActivity r where r.UserId = userId1) as Temp);    
    SET strActivity1 = (select activity from `dbo.splitwise`.RecentActivity r where r.UserId = userId2);
	Update `dbo.splitwise`.RecentActivity r set r.activity = (CONCAT(strActivity1, ';',  recentActivity)) where r.Id = (select PID from (select Id as PID from `dbo.splitwise`.RecentActivity r where r.UserId = userId2) as Temp);
end$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_splitwise_SaveGroupExpenses`(In userName varchar(200), In groupId bigint, In expense decimal(10,2), In expenseDescription varchar(200), In userIdArray varchar(500), In length bigint, In userGroupId bigint, IN recentActivity text, IN parentUserId bigint)
wholeblock:BEGIN
  declare str VARCHAR(255) default '';
  declare curUserId varchar(200);  
  declare strActivity text;
  declare x bigint;
  SET x = 1;
  SET strActivity = (select activity from `dbo.splitwise`.RecentActivity r where r.UserId = parentUserId);
  Update `dbo.splitwise`.RecentActivity r set r.activity = (CONCAT(strActivity, ';',  recentActivity)) where r.Id = (select PID from (select Id as PID from `dbo.splitwise`.RecentActivity r where r.UserId = parentUserId) as Temp);      
  
  WHILE x <= length DO
    SET curUserId = REPLACE(SUBSTRING(SUBSTRING_INDEX(userIdarray, ",", x),LENGTH(SUBSTRING_INDEX(userIdarray, ",", x - 1)) + 1),",", '');
    SET strActivity = (select activity from `dbo.splitwise`.RecentActivity r where r.UserId = curUserId);
    Update `dbo.splitwise`.RecentActivity r set r.activity = (CONCAT(strActivity, ';',  recentActivity)) where r.Id = (select PID from (select Id as PID from `dbo.splitwise`.RecentActivity r where r.UserId = curUserId) as Temp);
    call sp_splitwise_SaveIndividualExpense(userGroupId, curUserId, expense, expenseDescription);
    SET x = x + 1;	
  END WHILE;
    select str;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_splitwise_SaveIndividualExpense`(In userGroupId bigint, userId2 bigint, expense decimal(10,2), expenseDescription varchar(200))
begin
	Insert into `dbo.splitwise`.UserExpenses(UserGroupId, UserId2, Expense, CreatedTime, ExpenseDescription) values(userGroupId, userId2, expense, localtime(), expenseDescription);
end$$
DELIMITER ;










